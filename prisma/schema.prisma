generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id          Int      @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdById String
  createdBy   User     @relation(fields: [createdById], references: [id])

  @@index([name])
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  posts         Post[]
  sessions      Session[]
  events        Event[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Participant {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  tickets   Ticket[]
}

model Event {
  id          String   @id @default(cuid())
  name        String
  date        DateTime
  createdAt   DateTime @default(now())
  description String?
  location    String?
  logoUrl     String?
  maxTickets  Int?
  createdById String?
  createdBy   User?     @relation(fields: [createdById], references: [id])
  tickets     Ticket[]
}

model Ticket {
  id            String      @id @default(cuid())
  code          String      @unique
  number        Int?
  qrCode        String
  eventId       String
  participantId String
  createdAt     DateTime    @default(now())
  redeemedAt    DateTime?
  checkedIn     Boolean     @default(false)
  event         Event       @relation(fields: [eventId], references: [id])
  participant   Participant @relation(fields: [participantId], references: [id])
}
